From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Greg Price <greg@zulip.com>
Date: Fri, 27 May 2022 15:18:01 -0700
Subject: [tsflower] Manually rewrite Pick, from TS default library

There's no way to write Pick as a generic type in the Flow type
system; we'll need to implement it as a macro.

Some of these cases will be straightforward to handle: the keys
are a union of string literals, and the object is... well, not
quite a literal type, but Readonly of a literal type.  So we can
just select the properties to keep.

Some will be less straightforward: the keys are still a union of
string literals, but the object is some more general type expression.
We can *almost* handle it by using the SubsetProperties type alias,
and having the macro just turn a literals-union `"foo" | "bar"` into
an object type `{| foo: mixed, bar: mixed |}`.  The tricky bit there
is that to get the right behavior from SubsetProperties, the second
argument needs to specify which properties are optional to match the
first argument.  Perhaps we can ask the TS type-checker about the
first argument?
---
 .../src/useNavigationBuilder.js.flow          |  5 +-
 .../lib/typescript/src/useLinking.js.flow     | 70 +++++--------------
 .../typescript/src/useLinking.native.js.flow  | 70 +++++--------------
 .../lib/typescript/src/StackRouter.js.flow    | 41 +++++------
 .../lib/typescript/src/TabRouter.js.flow      | 35 +++++-----
 5 files changed, 67 insertions(+), 154 deletions(-)

diff --git types/@react-navigation/core/lib/typescript/src/useNavigationBuilder.js.flow types/@react-navigation/core/lib/typescript/src/useNavigationBuilder.js.flow
index 081a20a79..c07a899ba 100644
--- types/@react-navigation/core/lib/typescript/src/useNavigationBuilder.js.flow
+++ types/@react-navigation/core/lib/typescript/src/useNavigationBuilder.js.flow
@@ -1,6 +1,7 @@
 /* @flow
  * @generated by TsFlower
  */
+import type { SubsetProperties } from '../../../../../../src/generics';
 import type { NavigationProp as $tsflower_import_type$_$_2e__2f_types$NavigationProp } from './types';
 import type { EventEmitter as $tsflower_import_type$_$_2e__2f_types$EventEmitter } from './types';
 import type { EventConsumer as $tsflower_import_type$_$_2e__2f_types$EventConsumer } from './types';
@@ -315,12 +316,12 @@ declare export default function useNavigationBuilder<
     >,
   },
   NavigationContent: (
-    rest: Pick<
+    rest: SubsetProperties<
       $tsflower_subst$React$ProviderProps<$tsflower_import_type$_$_2e__2f_types$NavigationHelpers<
         { [key: string]: { ... } | void },
         { ... },
       > | void>,
-      'children',
+      {| children?: mixed |},
     >,
   ) => $tsflower_subst$React$JSX$Element,
   ...
diff --git types/@react-navigation/native/lib/typescript/src/useLinking.js.flow types/@react-navigation/native/lib/typescript/src/useLinking.js.flow
index 66bfb1f4d..19a797a4a 100644
--- types/@react-navigation/native/lib/typescript/src/useLinking.js.flow
+++ types/@react-navigation/native/lib/typescript/src/useLinking.js.flow
@@ -16,70 +16,32 @@ declare export default function useLinking(
 ): {
   getInitialState: () => PromiseLike<
     | (Partial<
-        Pick<
-          Readonly<{
-            key: string,
-            index: number,
-            routeNames: string[],
-            history?: mixed[] | void,
-            routes: Readonly<{
-              key: string,
-              name: string,
-              ...
-            }> &
-              Readonly<{ params?: { ... } | void, ... }> &
-              {
-                state?:
-                  | Readonly<any>
-                  | $tsflower_import_type$_$_40_react_2d_navigation_2f_core$PartialState<
-                      Readonly<any>,
-                    >
-                  | void,
-                ...
-              }[],
-            type: string,
-            stale: false,
-            ...
-          }>,
-          'key' | 'index' | 'routeNames' | 'history' | 'type',
-        >,
+        Readonly<{
+          key: string,
+          index: number,
+          routeNames: string[],
+          history?: mixed[] | void,
+          type: string,
+          ...
+        }>,
       > &
         Readonly<{
           stale?: true | void,
           routes: $tsflower_import_type$_$_40_react_2d_navigation_2f_core$PartialRoute<
             $tsflower_import_type$_$_40_react_2d_navigation_2f_core$Route<string, { ... } | void>,
           >[],
           ...
         }> & {
           state?:
             | (Partial<
-                Pick<
-                  Readonly<{
-                    key: string,
-                    index: number,
-                    routeNames: string[],
-                    history?: mixed[] | void,
-                    routes: Readonly<{
-                      key: string,
-                      name: string,
-                      ...
-                    }> &
-                      Readonly<{ params?: { ... } | void, ... }> &
-                      {
-                        state?:
-                          | Readonly<any>
-                          | $tsflower_import_type$_$_40_react_2d_navigation_2f_core$PartialState<
-                              Readonly<any>,
-                            >
-                          | void,
-                        ...
-                      }[],
-                    type: string,
-                    stale: false,
-                    ...
-                  }>,
-                  'key' | 'index' | 'routeNames' | 'history' | 'type',
-                >,
+                Readonly<{
+                  key: string,
+                  index: number,
+                  routeNames: string[],
+                  history?: mixed[] | void,
+                  type: string,
+                  ...
+                }>,
               > &
                 Readonly<{
                   stale?: true | void,
diff --git types/@react-navigation/native/lib/typescript/src/useLinking.native.js.flow types/@react-navigation/native/lib/typescript/src/useLinking.native.js.flow
index 66bfb1f4d..19a797a4a 100644
--- types/@react-navigation/native/lib/typescript/src/useLinking.native.js.flow
+++ types/@react-navigation/native/lib/typescript/src/useLinking.native.js.flow
@@ -16,70 +16,32 @@ declare export default function useLinking(
 ): {
   getInitialState: () => PromiseLike<
     | (Partial<
-        Pick<
-          Readonly<{
-            key: string,
-            index: number,
-            routeNames: string[],
-            history?: mixed[] | void,
-            routes: Readonly<{
-              key: string,
-              name: string,
-              ...
-            }> &
-              Readonly<{ params?: { ... } | void, ... }> &
-              {
-                state?:
-                  | Readonly<any>
-                  | $tsflower_import_type$_$_40_react_2d_navigation_2f_core$PartialState<
-                      Readonly<any>,
-                    >
-                  | void,
-                ...
-              }[],
-            type: string,
-            stale: false,
-            ...
-          }>,
-          'key' | 'index' | 'routeNames' | 'history' | 'type',
-        >,
+        Readonly<{
+          key: string,
+          index: number,
+          routeNames: string[],
+          history?: mixed[] | void,
+          type: string,
+          ...
+        }>,
       > &
         Readonly<{
           stale?: true | void,
           routes: $tsflower_import_type$_$_40_react_2d_navigation_2f_core$PartialRoute<
             $tsflower_import_type$_$_40_react_2d_navigation_2f_core$Route<string, { ... } | void>,
           >[],
           ...
         }> & {
           state?:
             | (Partial<
-                Pick<
-                  Readonly<{
-                    key: string,
-                    index: number,
-                    routeNames: string[],
-                    history?: mixed[] | void,
-                    routes: Readonly<{
-                      key: string,
-                      name: string,
-                      ...
-                    }> &
-                      Readonly<{ params?: { ... } | void, ... }> &
-                      {
-                        state?:
-                          | Readonly<any>
-                          | $tsflower_import_type$_$_40_react_2d_navigation_2f_core$PartialState<
-                              Readonly<any>,
-                            >
-                          | void,
-                        ...
-                      }[],
-                    type: string,
-                    stale: false,
-                    ...
-                  }>,
-                  'key' | 'index' | 'routeNames' | 'history' | 'type',
-                >,
+                Readonly<{
+                  key: string,
+                  index: number,
+                  routeNames: string[],
+                  history?: mixed[] | void,
+                  type: string,
+                  ...
+                }>,
               > &
                 Readonly<{
                   stale?: true | void,
diff --git types/@react-navigation/routers/lib/typescript/src/StackRouter.js.flow types/@react-navigation/routers/lib/typescript/src/StackRouter.js.flow
index d7bdf0f5e..cce94da4b 100644
--- types/@react-navigation/routers/lib/typescript/src/StackRouter.js.flow
+++ types/@react-navigation/routers/lib/typescript/src/StackRouter.js.flow
@@ -1,6 +1,7 @@
 /* @flow
  * @generated by TsFlower
  */
+import type { SubsetProperties } from '../../../../../../src/generics';
 import type { PartialState as $tsflower_import_type$_$_2e__2f_types$PartialState } from './types';
 import type { Readonly } from 'tsflower/subst/lib';
 
@@ -158,31 +159,21 @@ declare export default function StackRouter(options: StackRouterOptions): Router
               ...
             }>,
           >
-        | (Pick<
-            Readonly<{
-              key: string,
-              index: number,
-              routeNames: string[],
-              history?: mixed[] | void,
-              routes: Readonly<{
-                key: string,
-                name: string,
-                ...
-              }> &
-                Readonly<{ params?: { ... } | void, ... }> &
-                {
-                  state?:
-                    | Readonly<any>
-                    | $tsflower_import_type$_$_2e__2f_types$PartialState<Readonly<any>>
-                    | void,
-                  ...
-                }[],
-              type: string,
-              stale: false,
-              ...
-            }>,
-            'stale' | 'key' | 'index' | 'routeNames' | 'history' | 'type',
-          > & { routes: Pick<Route<string, { ... } | void>, 'name' | 'params'>[], ... })
+        | (Readonly<{
+            key: string,
+            index: number,
+            routeNames: string[],
+            history?: mixed[] | void,
+            type: string,
+            stale: false,
+            ...
+          }> & {
+            routes: SubsetProperties<
+              Route<string, { ... } | void>,
+              {| name: mixed, params?: mixed |},
+            >[],
+            ...
+          })
         | void,
       source?: string | void,
       target?: string | void,
diff --git types/@react-navigation/routers/lib/typescript/src/TabRouter.js.flow types/@react-navigation/routers/lib/typescript/src/TabRouter.js.flow
index 4fa8ed1ca..db3326e84 100644
--- types/@react-navigation/routers/lib/typescript/src/TabRouter.js.flow
+++ types/@react-navigation/routers/lib/typescript/src/TabRouter.js.flow
@@ -1,6 +1,7 @@
 /* @flow
  * @generated by TsFlower
  */
+import type { SubsetProperties } from '../../../../../../src/generics';
 import type { Extract, Readonly } from 'tsflower/subst/lib';
 
 import {
@@ -119,25 +120,21 @@ declare export default function TabRouter(TabRouterOptions): Router<
               ...
             }>,
           >
-        | (Pick<
-            Readonly<{
-              key: string,
-              index: number,
-              routeNames: string[],
-              history?: mixed[] | void,
-              routes: Readonly<{
-                key: string,
-                name: string,
-                ...
-              }> &
-                Readonly<{ params?: { ... } | void, ... }> &
-                { state?: Readonly<any> | PartialState<Readonly<any>> | void, ... }[],
-              type: string,
-              stale: false,
-              ...
-            }>,
-            'stale' | 'key' | 'index' | 'routeNames' | 'history' | 'type',
-          > & { routes: Pick<Route<string, { ... } | void>, 'name' | 'params'>[], ... })
+        | (Readonly<{
+            key: string,
+            index: number,
+            routeNames: string[],
+            history?: mixed[] | void,
+            type: string,
+            stale: false,
+            ...
+          }> & {
+            routes: SubsetProperties<
+              Route<string, { ... } | void>,
+              {| name: mixed, params?: mixed |},
+            >[],
+            ...
+          })
         | void,
       source?: string | void,
       target?: string | void,
-- 
2.32.0

