/* @flow
 * @generated by TsFlower
 */
import type {
  ReactNode as $tsflower_subst$React$ReactNode,
  JSX$Element as $tsflower_subst$React$JSX$Element,
} from 'tsflower/subst/react';

import type { Partial } from 'tsflower/subst/lib';

import type {
  StyleProp as $tsflower_subst$RN$StyleProp,
  ViewStyle as $tsflower_subst$RN$ViewStyle,
} from 'tsflower/subst/react-native';

import * as React from 'react';
import 'react-native';

import {
  type Layout,
  type NavigationState,
  type PagerProps,
  type Route,
  type SceneRendererProps,
} from './types';

export type Props<T: Route> = PagerProps & {
  onIndexChange: (index: number) => void,
  navigationState: NavigationState<T>,
  renderScene: (props: SceneRendererProps & { route: T, ... }) => $tsflower_subst$React$ReactNode,
  renderLazyPlaceholder?: (props: { route: T, ... }) => $tsflower_subst$React$ReactNode,
  renderTabBar?: (
    props: SceneRendererProps & { navigationState: NavigationState<T>, ... },
  ) => $tsflower_subst$React$ReactNode,
  tabBarPosition?: 'top' | 'bottom',
  initialLayout?: Partial<Layout>,
  lazy?: (props: { route: T, ... }) => boolean | boolean,
  lazyPreloadDistance?: number,
  sceneContainerStyle?: $tsflower_subst$RN$StyleProp<$tsflower_subst$RN$ViewStyle>,
  pagerStyle?: $tsflower_subst$RN$StyleProp<$tsflower_subst$RN$ViewStyle>,
  style?: $tsflower_subst$RN$StyleProp<$tsflower_subst$RN$ViewStyle>,
  ...
};

declare export function TabView<T: Route>(Props<T>): $tsflower_subst$React$JSX$Element;
