/* @flow
 * @generated by TsFlower
 */
import type { AnimatedInterpolation as $tsflower_subst$RN$Animated$AnimatedInterpolation } from 'tsflower/subst/react-native';

import type {
  ReactNode as $tsflower_subst$React$ReactNode,
  JSXElementConstructor as $tsflower_subst$React$JSXElementConstructor,
} from 'tsflower/subst/react';

import * as React from 'react';
import { Animated } from 'react-native';

import {
  type EventEmitterProps,
  type Layout,
  type NavigationState,
  type PagerProps,
  type Route,
} from './types';

type Props<T: Route> = PagerProps & {
  layout: Layout,
  onIndexChange: (index: number) => void,
  navigationState: NavigationState<T>,
  children: (
    props: EventEmitterProps & {
      position: $tsflower_subst$RN$Animated$AnimatedInterpolation,
      render: (children: $tsflower_subst$React$ReactNode) => $tsflower_subst$React$ReactNode,
      jumpTo: (key: string) => void,
      ...
    },
  ) => React$Element<React$ElementType>,
  ...
};

declare export function PanResponderAdapter<T: Route>(
  Props<T>,
): React$Element<string | $tsflower_subst$React$JSXElementConstructor<any>>;
export {};
